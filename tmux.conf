set-option -g allow-rename off
set-option -g renumber-windows on
set-option -g default-shell /bin/bash
set -sg escape-time 10

# set-window-option -g xterm-keys on
### Unbind default mappings that whill be rebound to other keys

unbind C-b
set -g prefix C-t

unbind %
unbind :
unbind x
unbind &
unbind '"'
unbind UP
unbind DOWN
unbind RIGHT
unbind LEFT
unbind '}'
unbind '{'

bind d select-pane -L
bind t select-pane -D
bind h select-pane -U
bind n select-pane -R
bind s resize-pane -Z

bind D swap-pane -d -t '{left-of}'
bind T swap-pane -d -t '{down-of}'
bind H swap-pane -d -t '{up-of}'
bind N swap-pane -d -t '{right-of}'

bind g select-window -p
bind r select-window -n
bind l select-window -l

bind G swap-window -d -t '{previous}'
bind R swap-window -d -t '{next}'
bind C command-prompt "move-window -t '%%'"

bind o split-window -h -c "#{pane_current_path}"
bind q split-window -c "#{pane_current_path}"

bind - command-prompt "switch-client -t '%%'"
bind _ command-prompt "rename-session '%%'"

bind % select-window -t :=0
bind \; command-prompt "resize-pane -y '%%'"
bind : command-prompt "resize-pane -x '%%'"

bind k confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind K confirm-before -p "kill-window #W? (y/n)" kill-window

bind , command-prompt
bind . command-prompt -I "#W" "rename-window '%%'"

bind-key -T copy-mode-vi d send-keys -X cursor-left
bind-key -T copy-mode-vi t send-keys -X cursor-down
bind-key -T copy-mode-vi h send-keys -X cursor-up
bind-key -T copy-mode-vi n send-keys -X cursor-right
bind-key -T copy-mode-vi l send-keys -X end-of-line
bind-key -T copy-mode-vi r send-keys -X start-of-line

bind-key -T copy-mode-vi L command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""

bind-key -T copy-mode-vi H send-keys -X halfpage-up
bind-key -T copy-mode-vi T send-keys -X halfpage-down

bind-key -T copy-mode-vi k send-keys -X search-again
bind-key -T copy-mode-vi K send-keys -X search-reverse
bind-key -T copy-mode-vi v send-keys -X begin-selection

if-shell 'command -v pbcopy' {
	bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
	bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
}
if-shell 'command -v xclip' {
	bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clip"
	bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clip"
}

unbind-key -T copy-mode-vi f
unbind-key -T copy-mode-vi C-j
unbind-key -T copy-mode-vi Enter
unbind-key -T copy-mode    Escape
unbind-key -T copy-mode-vi Escape

set-option -g mouse on

### set inactive/active window styles

# set the pane border colors
set -g pane-border-style 'fg=colour16'
set -g pane-active-border-style 'fg=colour0'

setw -g monitor-activity on
set -g visual-activity on

# set -g window-style 'bg=colour234,fg=colour102'
# set -g window-active-style 'fg=colour7'

set-option -g status-style bg=colour233
# set-option -g window-status-style fg=green,bold
# set-option -g window-status-current-style "fg=colour16,bg=green,bold"

set-option -g status-left-length 100
set-option -g status-right-length 300

set-option -g status-left  '#[bg=magenta,fg=colour234,bold] #(whoami) @ #h #[fg=magenta,bg=blue]ü≠¨#[fg=colour234] #S #[default]#[fg=blue]ü≠¨#[default] '
set-option -g status-right '#[fg=blue,bold]ü≠Æü≠™#[bg=blue,fg=colour234,bold] ‚ßñ % Y-%m-%d %H:%M #[fg=magenta]ü≠Æü≠™#[bg=magenta,fg=colour234] ‚òç #(ip addr show $(awk "\$2 == 00000000 { print \$1 }" /proc/net/route) | awk "\$1 == \"inet\" { print \$2 }") '

set-option -g window-status-format         '#[default]#[fg=colour233]ü≠¨#[default,fg=green,bold][#I] #W #[default] '
set-option -g window-status-current-format '#[default]#[fg=colour234,bg=green]ü≠¨#[fg=colour234,bg=green,bold][#I] #W #[default]#[fg=green]ü≠¨#[default]'
