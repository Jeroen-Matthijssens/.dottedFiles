// Programmer Dvorak, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD, available at <http://www.kaufmann.no/roland/dvorak/license.html>
// Main features: Numbers are in shift position (like French), symbols have been
// placed in locations that give good hand-alternation and finger rolling with
// symbols that usually follows, accented characters are possible for I18N.
//
// ┌────┐
// │ 2 4│   2 = Shift,  4 = Level3 + Shift
// │ 1 3│   1 = Normal, 3 = Level3
// └────┘
//
// & + = * !
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ~   │ %   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ `   ┃ ⌫ Back  ┃
// │ $   │ #   │ [   │ {   │ (   │ =   │ *   │ +   │ )   │ }   │ ]   │ !   │ &   ┃  space  ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ :   │ <   │ >   │ P   │ Y   │ F   │ G   │ C   │ R   │ L   │ ?   │ ^   ┃ Enter ┃
// ┃Tab ↹  ┃ ;   │ ,   │ .   │ p   │ y   │ f   │ g   │ c   │ r   │ l   │ /   │ @   ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ A   │ O   │ E   │ U   │ I   │ D   │ H   │ T   │ N   │ S   │ _   │ |   ┃      ┃
// ┃Caps ⇬  ┃ a   │ o   │ e   │ u   │ i   │ d   │ h   │ t   │ n   │ s   │ -   │ \   ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃     │ "   │ Q   │ J   │ K   │ X   │ B   │ M   │ W   │ V   │ Z   ┃             ┃
// ┃Shift ⇧┃     │ ' ` │ q   │ j   │ k   │ x   │ b   │ m   │ w   │ v   │ z   ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣                               ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣            space              ␣ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛


partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1] = "USA - Programmer Dvorak";

    //             Unmodified       Shift           AltGr            Shift+AltGr

    // symbols row, left side
    key <TLDE> { [ dollar,          asciitilde,     dead_tilde                  ] };
    key <AE01> { [ numbersign,      percent                                     ] };
    key <AE02> { [ bracketleft,     1,              currency                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE03> { [ braceleft,       2,              cent                        ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE04> { [ parenleft,       3,              yen                         ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE05> { [ equal,           4,              EuroSign                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE06> { [ asterisk,        5,              sterling                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };

    // symbols row, right side
    key <AE07> { [ plus,            6                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE08> { [ parenright,      7,              onehalf                     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE09> { [ braceright,      8                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE10> { [ bracketright,    9                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE11> { [ exclam,          0,              exclamdown                  ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE12> { [ ampersand,       grave,          dead_grave                  ] };
    key <BKSP> { [ BackSpace,       Delete                                      ] };

    // upper row, left side
    key <AD01> { [ semicolon,       colon,          dead_diaeresis              ] };
    key <AD02> { [ comma,           less,           guillemotleft               ] };
    key <AD03> { [ period,          greater,        guillemotright              ] };
    key <AD04> { [ p,               P,              paragraph,       section    ] };
    key <AD05> { [ y,               Y,              udiaeresis,      Udiaeresis ] };

    // upper row, right side
    key <AD06> { [ f,               F                                           ] };
    key <AD07> { [ g,               G                                           ] };
    key <AD08> { [ c,               C,              ccedilla,        Ccedilla   ] };
    key <AD09> { [ r,               R,              registered,      trademark  ] };
    key <AD10> { [ l,               L                                           ] };
    key <AD11> { [ slash,           question,       questiondown                ] };
    key <AD12> { [ at,              asciicircum,    dead_circumflex, dead_caron ] };

    // home row, left side
    key <AC01> { [ a,               A,              aring,           Aring      ] };
    key <AC02> { [ o,               O,              oslash,          Ooblique   ] };
    key <AC03> { [ e,               E,              ae,              AE         ] };
    key <AC04> { [ u,               U                                           ] };
    key <AC05> { [ i,               I                                           ] };

    // home row, right side
    key <AC06> { [ d,               D,              eth,             ETH        ] };
    key <AC07> { [ h,               H,              dead_acute                  ] };
    key <AC08> { [ t,               T,              thorn,           THORN      ] };
    key <AC09> { [ n,               N,              ntilde,          Ntilde     ] };
    key <AC10> { [ s,               S,              ssharp                      ] };
    key <AC11> { [ minus,           underscore,     hyphen                      ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <BKSL> { [ backslash,       bar                                         ] };

    // lower row, left side
    key <AB01> { [ apostrophe,      quotedbl,       grave                       ] };
    key <AB02> { [ q,               Q                                           ] };
    key <AB03> { [ j,               J                                           ] };
    key <AB04> { [ k,               K                                           ] };
    key <AB05> { [ x,               X                                           ] };
    key <AB06> { [ b,               B                                           ] };
    key <AB07> { [ m,               M                                           ] };
    key <AB08> { [ w,               W                                           ] };
    key <AB09> { [ v,               V                                           ] };
    key <AB10> { [ z,               Z                                           ] };

    augment "cdvorak(atm)"
    augment "cdvorak(102)"
    include "level3(ralt_switch)"
};

// if you have a 102-keys keyboard, then you are probably in a country
// that uses accented characters. by using the 102nd key as Compose, you
// can keep a 101-keys layout (such as U.S.) and still type the accented
// characters.
partial modifier_keys
xkb_symbols "102" {
    key <LSGT> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

// Main numbers follows the traditions from ATMs and phones with
// numbers increasing downwards to the right. (It is easier to
// change the keyboard layout than to reprogram your local ATM;
// also cell-phones are becoming more common while calculators are
// becoming more rare).
// First level is left unspecified, so it may be combined with another
// layout, e.g. "legacy".

// Hexadecimal Numpad, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD (also covers variant with ATM digit order)
// Third-level gives the letters used in hexadecimal numbers, or
// columns in small spreadsheets. As a bonus, having 'e' available at
// the center of the keyboard makes it easy to enter floating point
// numbers in scientific notation.
// Equal is added to start formulas (most numpads on PCs don't have
// their own equal key), comma as a list separator (as most
// programming languages wants period as a decimal separator) and
// colon to enter times and ranges. Someone also may want to represent
// multiplication and division in prose using x and colon.
// Two first levels are specified as NoSymbol to not override any
// previous specification. Combine this with another keypad specifier,
// e.g. "legacy".

partial keypad_keys
xkb_symbols "atm" {
    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    //             None       NumLock      AltGr
    // symbol row
    key <KPDV> { [ KP_Divide,    KP_Divide,    parenleft   ] };
    key <KPMU> { [ KP_Multiply,  KP_Multiply,  parenright  ] };
    key <KPSU> { [ KP_Subtract,  KP_Subtract,  dollar      ] };

    // upper row
    key <KP7>  { [ KP_1,         a,            KP_Home     ] };
    key <KP8>  { [ KP_2,         b,            KP_Up       ] };
    key <KP9>  { [ KP_3,         c,            KP_Prior    ] };
    key <KPAD> { [ KP_Add,       KP_Add,       comma       ] };

    // home row
    key <KP4>  { [ KP_4,         d,            KP_Left     ] };
    key <KP5>  { [ KP_5,         e,            KP_Begin    ] };
    key <KP6>  { [ KP_6,         f,            KP_Right    ] };

    // lower row
    key <KP1>  { [ KP_7,         equal,         NoSymbol    ] };
    key <KP2>  { [ KP_8,         x,             KP_Down    ] };
    key <KP3>  { [ KP_9,         colon,         KP_Next    ] };

    // decimal row
    key <KP0>  { [ KP_0,         KP_Insert,    backslash   ] };
    key <KPDL> { [ KP_Decimal,   BackSpace,    dead_abovedot,  dead_caron  ] }; 

};
